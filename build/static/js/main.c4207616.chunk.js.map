{"version":3,"sources":["logo.svg","utils/Api.js","Components/Login.js","hooks/useAuth.js","Components/SignUp.js","hooks/MinHook.js","Components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","axios","create","baseURL","Copyright","Typography","variant","color","align","href","Date","getFullYear","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","Login","classes","history","useHistory","useState","email","password","formSignUp","setformSignUp","signupUser","a","config","headers","body","api","post","res","console","log","data","status","localStorage","setItem","token","push","useAuth","loginUser","onChange","e","target","name","value","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","noValidate","onSubmit","preventDefault","TextField","required","fullWidth","id","label","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Button","to","Box","mt","Link","SignUp","Swal","fire","MinHook","Container","maxWidth","justify","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","justifyContent","padding","mixins","content","flexGrow","MiniDrawer","useTheme","React","open","setOpen","AppBar","position","style","clsx","Toolbar","IconButton","aria-label","onClick","edge","noWrap","Drawer","direction","Divider","List","map","text","index","ListItem","button","key","ListItemIcon","ListItemText","primary","m","p","App","exact","path","Home","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c4207616.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from \"axios\";\r\n\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:5000\",\r\n  // withCredentials: true,\r\n  // credentials: \"include\",\r\n});","import React,{useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n// import Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Link} from 'react-router-dom'\r\nimport { useAuth } from \"../hooks/useAuth\"\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n          Softal\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://images.unsplash.com/photo-1471107340929-a87cd0f5b5f3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=666&q=80)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Login() {\r\n  const classes = useStyles();\r\n\r\n    const [formSignUp, setformSignUp, signupUser, loginUser ] = useAuth();\r\n\r\n    const{email, password} = formSignUp;\r\n\r\n    const onChange=(e)=>{\r\n      setformSignUp({\r\n            ...formSignUp,[e.target.name]:e.target.value\r\n            \r\n        })\r\n    }\r\n\r\n    const onSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if (formSignUp) signupUser(email,password)\r\n\r\n        else  loginUser(email,password)\r\n    }\r\n    \r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={(e)=> onSubmit(e)}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e)=> onChange(e)}\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e)=> onChange(e)}\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n               fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link to=\"/SignUp\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","import { useState } from 'react';\r\nimport api from '../utils/Api';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const useAuth = () => {\r\n    let history = useHistory();\r\n\r\n    const [formSignUp, setformSignUp]=useState({\r\n    email:'',\r\n    password:''\r\n    })\r\n\r\n\r\n    const signupUser = async (email,password) => {\r\n        try{\r\n            const config = {headers :{\"Content-Type\":\"application/json\"}}\r\n            const body = {email,password};\r\n            const res  = await api.post('/api/signup',body,config);\r\n            console.log('Data from Api ',res)\r\n              \r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n\r\n        }\r\n    }\r\n\r\n    const loginUser = async (email, password) => {\r\n        try{\r\n            const config = {headers :{\"Content-Type\":\"application/json\"}}\r\n            const body = {email,password};\r\n            const res  = await api.post('/api/login',body,config);\r\n            console.log('Data from Api ',res)\r\n            if(res.data.status===\"success\") {\r\n                localStorage.setItem('token',res.data.token)\r\n                history.push('/home')\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n      \r\n        }\r\n      }\r\n\r\n    return [formSignUp, setformSignUp, loginUser,  signupUser];\r\n}","import React , {useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n// import {Link} from 'react-router-dom'\r\nimport { useAuth } from \"../hooks/useAuth\"\r\nimport {MinHook} from \"../hooks/MinHook\"\r\nfunction Copyright( ) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const [formSignUp, setformSignUp, signupUser ] = MinHook();\r\n\r\n  const{email ,password} = formSignUp;\r\n\r\n  const onChange=(e)=>{\r\n      setformSignUp({\r\n          ...formSignUp,[e.target.name]:e.target.value\r\n          \r\n      })\r\n  }\r\n  // console.log(formSignUp)\r\n  const onSubmit = (e)=>{\r\n      e.preventDefault();\r\n      signupUser(email, password);\r\n      console.log('I am signing user',signupUser)\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={(e)=>onSubmit(e)}>\r\n          <Grid container spacing={2}>\r\n            {/* <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid> */}\r\n            <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e)=> onChange(e)}\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e)=> onChange(e)}\r\n              autoComplete=\"current-password\"\r\n            />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import { useState } from 'react';\r\nimport api from '../utils/Api';\r\nimport Swal from 'sweetalert2'\r\nexport const MinHook = () => {\r\n    \r\n\r\n  const [formSignUp, setformSignUp]=useState({\r\n    email:'',\r\n    password:''\r\n    })\r\n    const signupUser = async (email,password) => {\r\n        try{\r\n            const config = {headers :{\"Content-Type\":\"application/json\"}}\r\n            const body = {email,password};\r\n            const res  = await api.post('/api/signup',body,config);\r\n            console.log('Data from Api ',res)\r\n            if(res.data.status===\"success\"){\r\n                Swal.fire(\r\n                    'Account Created Succesfully',\r\n                    'You may Login Now',\r\n                    'success'\r\n                  )\r\n                setformSignUp({\r\n                    email:'',\r\n                    password:''\r\n                })\r\n            }\r\n          \r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n\r\n        }\r\n    }\r\n    return [formSignUp, setformSignUp, signupUser];\r\n\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport '../Components/Home.css'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        style={{backgroundColor:'#f8f9fa!important',color:'#000'}}\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n              Welcome User\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Container  className=\"container-wrapper\">\r\n        {/* <Box textAlign=\"center\" m={1}>\r\n        Center aligned text.\r\n      </Box> */}\r\n      <div className=\"container-content\">\r\n        <h2>Don't have an article yet?</h2>\r\n    \r\n\r\n      </div>\r\n      <Box display=\"flex\" justifyContent=\"center\" m={1} p={1} >\r\n      <Button variant=\"contained\" color=\"primary\">\r\n        Create Now\r\n      </Button>\r\n\r\n      </Box>\r\n    \r\n        {/* <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '100vh' }} /> */}\r\n      </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport Login from './Components/Login'\nimport SignUp from './Components/SignUp'\n\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom'\nimport Home from './Components/Home'\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path =\"/\" component={Login} />\n        <Route exact path = \"/SignUp\" component={SignUp}/>\n          <Route exact path =\"/Home\" component={Home}/>\n      </Switch>\n    \n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}